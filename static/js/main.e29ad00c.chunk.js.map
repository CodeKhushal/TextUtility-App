{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/Footer.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","role","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","fWord","findWord","_useState3","_useState4","rWord","replaceWord","_useState5","_useState6","text","setText","Fragment","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","toogle","textContent","innerHTML","cancel","aria-describedby","console","log","replaceAll","split","filter","n","length","Alert","alert","modeType","word","lower","charAt","slice","capitalize","defaultProps","aboutText","Footer","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","style","marginBottom","Component","App","setmode","setAlert","message","mType","setTimeout","body","backgroundColor","color","Footer_Footer","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e29ad00c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types' // props concept\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    // JSX\r\n    // Bootstrap\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a> {/*Props*/}\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n            </li> */}\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='dark' ? 'light':'dark'} m-2`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label me-2\" htmlFor=\"flexSwitchCheckDefault\">{`${props.mode==='dark' ? 'light':'dark'}`}</label>\r\n          </div>\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className={`btn btn-outline-${props.mode==='dark' ? 'light':'dark'} type=\"submit\"`}>Search</button>\r\n            {/* success = green, primary = blue */}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\n// Property Types Set\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\n\r\n// default property set\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'About text here'\r\n}","import React, { useState } from 'react' // state Concept\r\n\r\nexport default function TextForm(props) {\r\n    // event handler to convert text to Upper case\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\", \"success\", \"success\");\r\n    }\r\n\r\n    // event handler to convert text to lower case\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\", \"success\");\r\n    }\r\n\r\n    // event handler for changing text\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"OnChange clicked\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    // event to handle clear text\r\n    const handleClearText = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared\", \"success\", \"success\");\r\n    }\r\n\r\n    // event to handle copy text\r\n    const handleCopyText = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text copied to clipboard!\", \"success\", \"success\");\r\n    }\r\n\r\n    // event handler for text to speech\r\n    const speak = () => {\r\n        let msg = new SpeechSynthesisUtterance(text);\r\n        window.speechSynthesis.speak(msg);\r\n        const toogle = document.getElementById('toggle')\r\n        if (toogle.textContent === \"Speak\") {\r\n            toogle.innerHTML = \"Stop\"\r\n        }\r\n        else {\r\n            toogle.innerHTML = \"Speak\"\r\n            if (toogle.innerHTML === \"Speak\") {\r\n                window.speechSynthesis.cancel()\r\n            }\r\n        }\r\n    }\r\n\r\n    const [fWord, findWord] = useState(\"\");\r\n    const [rWord, replaceWord] = useState(\"\");\r\n    const handlefindChange = (event) => {\r\n        findWord(event.target.value);\r\n    };\r\n    const handleReplaceChange = (event) => {\r\n        console.log(replaceWord(event.target.value));\r\n    };\r\n    const handleReplaceClick = () => {\r\n        let newText = text.replaceAll(fWord, rWord);\r\n        setText(newText);\r\n        props.showAlert(\"Replaced words!\", \"success\", \"success\");\r\n    };\r\n\r\n    // defining  two states text(it is a value) and setText(it is a function) and setting the text to default text\r\n    // using useState hook\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    {/* if value is changed the onChange event will call handleOnChange function */}\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"15\" placeholder='Enter your text here' ></textarea>\r\n                </div>\r\n\r\n                {/* if button is clicked the onClick event will call handleUpClick function */}\r\n                {/* button for uppercase */}\r\n                <button className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n\r\n                {/* button for lowercase */}\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n\r\n                {/* button for clear text */}\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleClearText}>Clear Text</button>\r\n\r\n                {/* button for copy text */}\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleCopyText}>Copy Text</button>\r\n\r\n                {/* button for text to speech */}\r\n                <button className=\"btn btn-warning mx-2 my-2\" onClick={speak} id=\"toggle\">Speak</button>\r\n\r\n                {/* input for find word */}\r\n                <div className=\"input-group my-3\">\r\n                    <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Find Word</span>\r\n                    <input type=\"text\" className=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\" value={fWord} onChange={handlefindChange} id=\"myBox\" />\r\n                </div>\r\n\r\n                {/* input for replace word */}\r\n                <div className=\"input-group mb-3\">\r\n                    <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Replace Word</span>\r\n                    <input type=\"text\" className=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\" value={rWord} onChange={handleReplaceChange} id=\"myBox\" />\r\n                </div>\r\n\r\n                {/* <textarea className=\"form-control my-2\" value={fWord} onChange={handlefindChange} id=\"myBox\" rows=\"1\"></textarea>\r\n\r\n                    <textarea className=\"form-control my-2\" value={rWord} onChange={handleReplaceChange} id=\"myBox\" rows=\"1\"></textarea> */}\r\n\r\n                {/* button for replace word */}\r\n                <button className=\"btn btn-warning mx-2 my-2\" onClick={handleReplaceClick} id=\"toggle\">Replace Words</button>\r\n            </div>\r\n\r\n            <div className=\"container my-4\">\r\n                <h2>Your text summary</h2>\r\n                <p>{text.split(' ').filter(function (n) { return n !== '' }).length} words and {text.length} characters</p> {/* text.split(\" \").length*/}\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Enter text in textarea above to preview it here!\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.modeType}`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card-footer text-center\" style={{marginBottom: \"7px\"}}>\r\n                <small>Made with &hearts; by Khushal Sachdeva</small>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\n// import About from './components/About';\r\nimport Alert from './components/Alert';\r\nimport Footer from './components/Footer';\r\n\r\n\r\nfunction App() {\r\n  const [mode, setmode] = useState('light');\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type, mType) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n      modeType: mType\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  }\r\n\r\n  const toggleMode = () => {\r\n    if (mode === 'light') {\r\n      setmode('dark');\r\n      document.body.style.backgroundColor = '#042743';\r\n      document.body.style.color = 'white';\r\n      showAlert(\"Dark mode has been enabled\", \"success\", \"primary\");\r\n    }\r\n    else {\r\n      setmode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      document.body.style.color = 'black';\r\n      showAlert(\"Light mode has been enabled\", \"success\", \"secondary\");\r\n    }\r\n  }\r\n  return (\r\n    <> {/*jsx fragment to return multiple tags*/}\r\n      <Navbar title=\"TextUtils\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} /> {/* used props*/}\r\n      <Alert alert={alert} />\r\n      <div className=\"container my-3\">\r\n        {/* Concept of exact\r\n                /users --> Component 1 \r\n              /users/home --> Component 2 */}\r\n        <TextForm heading=\"Enter the text to analyze\" showAlert={showAlert} mode={mode} toggleMode={toggleMode}/>\r\n      </div>\r\n      <Footer/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}