{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","role","placeholder","defaultProps","TextForm","_useState","useState","_useState2","Object","slicedToArray","fWord","findWord","_useState3","_useState4","rWord","replaceWord","_useState5","_useState6","text","setText","Fragment","heading","value","onChange","event","target","rows","onClick","newText","toUpperCase","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","toogle","document","getElementById","textContent","innerHTML","cancel","aria-describedby","console","log","replaceAll","split","length","App","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"0LAGe,SAASA,EAAOC,GAC7B,OAGEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAKL,EAAMM,OAAU,IACtDL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBG,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1LX,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BS,GAAG,0BAC3CZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBU,eAAa,OAAOT,KAAK,KAAG,SAE7DJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWC,KAAK,KAAKL,EAAMe,aAG5Cd,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASY,KAAK,UAC5Bf,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoBG,KAAK,SAASU,YAAY,SAASL,aAAW,WACnFX,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0BAA0BG,KAAK,UAAQ,cAgBvER,EAAOmB,aAAe,CAClBZ,MAAO,iBACPS,UAAW,8BCxCA,SAASI,EAASnB,GAE7B,IAgCCoB,EAEyBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA/BK,EAAKH,EAAA,GAAEI,EAAQJ,EAAA,GAAAK,EACON,mBAAS,IAAGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAWF,EAAA,GAazBG,EACwBV,mBAAS,IAAGW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpB,OACI/B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiC,SAAA,KACIlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAKH,EAAMoC,SACXnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEXH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAeiC,MAAOJ,EAAMK,SA5C7C,SAACC,GAEpBL,EAAQK,EAAMC,OAAOH,QA0CqExB,GAAG,QAAQ4B,KAAK,KAAKxB,YAAY,0BAK/GhB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBsC,QA9DnC,WAElB,IAAIC,EAAUV,EAAKW,cACnBV,EAAQS,KA2DoE,wBAGhE1C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBsC,QA1DlC,WACnB,IAAIC,EAAUV,EAAKY,cACnBX,EAAQS,KAwDqE,wBAGjE1C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BsC,QAjDhD,WACV,IAAII,EAAM,IAAIC,yBAAyBd,GACvCe,OAAOC,gBAAgBC,MAAMJ,GAC7B,IAAMK,EAASC,SAASC,eAAe,UACZ,UAAvBF,EAAOG,YACPH,EAAOI,UAAY,QAGnBJ,EAAOI,UAAY,QACM,UAArBJ,EAAOI,WACPP,OAAOC,gBAAgBO,WAuC2C3C,GAAG,UAAQ,SAGzEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBS,GAAG,6BAA2B,aACjEZ,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOH,UAAU,eAAeQ,aAAW,uBAAuB6C,mBAAiB,4BAA4BpB,MAAOZ,EAAOa,SArCpI,SAACC,GACtBb,EAASa,EAAMC,OAAOH,QAoC+JxB,GAAG,WAI5KZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBS,GAAG,6BAA2B,gBACjEZ,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOH,UAAU,eAAeQ,aAAW,uBAAuB6C,mBAAiB,4BAA4BpB,MAAOR,EAAOS,SAxCjI,SAACC,GACzBmB,QAAQC,IAAI7B,EAAYS,EAAMC,OAAOH,SAuCmJxB,GAAG,WAQ/KZ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BsC,QA7CnC,WACvB,IAAIC,EAAUV,EAAK2B,WAAWnC,EAAOI,GACrCK,EAAQS,IA2C+E9B,GAAG,UAAQ,kBAG1FZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAI8B,EAAK4B,MAAM,KAAKC,OAAM,cAAa7B,EAAK6B,OAAM,eAClD7D,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAI8B,MClFT8B,MAXf,WACE,OACE9D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiC,SAAA,SACElC,EAAAC,EAAAC,cAACJ,EAAM,CAACO,MAAM,YAAYS,UAAU,aAAa,IACjDd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACgB,EAAQ,CAACiB,QAAQ,iCCLb4B,IAASC,WAAWb,SAASC,eAAe,SACpDa,OACHjE,EAAAC,EAAAC,cAACF,EAAAC,EAAMiE,WAAU,KACflE,EAAAC,EAAAC,cAACiE,EAAG","file":"static/js/main.2284f2c0.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types' // props concept\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    // JSX\r\n    // Bootstrap\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a> {/*Props*/}\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\" role=\"search\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n              {/* success = green, primary = blue */}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  )\r\n}\r\n\r\n// Property Types Set\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\n// default property set\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About text here'\r\n}","import React, { useState } from 'react' // state Concept\r\n\r\nexport default function TextForm(props) {\r\n    // event handler to convert text to Upper case\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    // event handler to convert text to lower case\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    // event handler for changing text\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"OnChange clicked\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    // event handler for text to speech\r\n    const speak = () => {\r\n        let msg = new SpeechSynthesisUtterance(text);\r\n        window.speechSynthesis.speak(msg);\r\n        const toogle = document.getElementById('toggle')\r\n        if (toogle.textContent === \"Speak\") {\r\n            toogle.innerHTML = \"Stop\"\r\n        }\r\n        else {\r\n            toogle.innerHTML = \"Speak\"\r\n            if (toogle.innerHTML === \"Speak\") {\r\n                window.speechSynthesis.cancel()\r\n            }\r\n        }\r\n    }\r\n\r\n    const [fWord, findWord] = useState(\"\");\r\n    const [rWord, replaceWord] = useState(\"\");\r\n    const handlefindChange = (event) => {\r\n        findWord(event.target.value);\r\n    };\r\n    const handleReplaceChange = (event) => {\r\n        console.log(replaceWord(event.target.value));\r\n    };\r\n    const handleReplaceClick = () => {\r\n        let newText = text.replaceAll(fWord, rWord);\r\n        setText(newText);\r\n    };\r\n\r\n    // defining  two states text(it is a value) and setText(it is a function) and setting the text to default text\r\n    // using useState hook\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <div>\r\n            <>\r\n                <div className=\"container\">\r\n                    <h1>{props.heading}</h1>\r\n                    <div className=\"mb-3\">\r\n                        {/* if value is changed the onChange event will call handleOnChange function */}\r\n                        <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"15\" placeholder='Enter your text here'></textarea>\r\n                    </div>\r\n                    \r\n                    {/* if button is clicked the onClick event will call handleUpClick function */}\r\n                    {/* button for uppercase */}\r\n                    <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n\r\n                    {/* button for lowercase */}\r\n                    <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n\r\n                    {/* button for text to speech */}\r\n                    <button className=\"btn btn-warning mx-2 my-2\" onClick={speak} id=\"toggle\">Speak</button>\r\n\r\n                    {/* input for find word */}\r\n                    <div className=\"input-group mb-3\">\r\n                        <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Find Word</span>\r\n                        <input type=\"text\" className=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\" value={fWord} onChange={handlefindChange} id=\"myBox\"/>\r\n                    </div>\r\n\r\n                    {/* input for replace word */}\r\n                    <div className=\"input-group mb-3\">\r\n                        <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Replace Word</span>\r\n                        <input type=\"text\" className=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\" value={rWord} onChange={handleReplaceChange} id=\"myBox\"/>\r\n                    </div>\r\n\r\n                    {/* <textarea className=\"form-control my-2\" value={fWord} onChange={handlefindChange} id=\"myBox\" rows=\"1\"></textarea>\r\n\r\n                    <textarea className=\"form-control my-2\" value={rWord} onChange={handleReplaceChange} id=\"myBox\" rows=\"1\"></textarea> */}\r\n\r\n                    {/* button for replace word */}\r\n                    <button className=\"btn btn-warning mx-2 my-2\" onClick={handleReplaceClick} id=\"toggle\">Replace Words</button>\r\n                </div>\r\n\r\n                <div className=\"container my-4\">\r\n                    <h2>Your text summary</h2>\r\n                    <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                    <h2>Preview</h2>\r\n                    <p>{text}</p>\r\n                </div>\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\n\r\nfunction App() {\r\n  return (\r\n    <> {/*jsx fragment to return multiple tags*/}\r\n      <Navbar title=\"TextUtils\" aboutText=\"About Us\" /> {/* used props*/}\r\n      <div className=\"container my-3\">\r\n        <TextForm heading=\"Enter the text to analyze\" />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}